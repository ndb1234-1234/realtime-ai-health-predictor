{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhana\\\\Desktop\\\\ece_project\\\\health-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [pdfFile, setPdfFile] = useState(null);\n  const [healthData, setHealthData] = useState(null);\n  const [suggestions, setSuggestions] = useState(null);\n  const handleFileChange = e => {\n    setPdfFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!pdfFile) return alert(\"Please select a PDF file.\");\n    const formData = new FormData();\n    formData.append('pdf', pdfFile);\n    const response = await fetch('http://localhost:8000/upload', {\n      method: 'POST',\n      body: formData\n    });\n    const result = await response.json();\n    setHealthData(result.data);\n    setSuggestions(result.suggestions);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: 40,\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Your Health Data PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"application/pdf\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      style: {\n        marginLeft: 10\n      },\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), healthData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Extracted Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.entries(healthData).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [key, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this), \" \", value]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), suggestions && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Medical Suggestions & Recommended Doctors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: suggestions.map((sugg, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: sugg\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"shrrFRt9FnCn7iyTFxK7P3/xhFo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","pdfFile","setPdfFile","healthData","setHealthData","suggestions","setSuggestions","handleFileChange","e","target","files","handleUpload","alert","formData","FormData","append","response","fetch","method","body","result","json","data","style","margin","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","marginLeft","Object","entries","map","key","value","sugg","i","_c","$RefreshReg$"],"sources":["C:/Users/dhana/Desktop/ece_project/health-frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n  const [pdfFile, setPdfFile] = useState(null);\n  const [healthData, setHealthData] = useState(null);\n  const [suggestions, setSuggestions] = useState(null);\n\n  const handleFileChange = (e) => {\n    setPdfFile(e.target.files[0]);\n  };\n\n  const handleUpload = async () => {\n    if (!pdfFile) return alert(\"Please select a PDF file.\");\n    const formData = new FormData();\n    formData.append('pdf', pdfFile);\n\n    const response = await fetch('http://localhost:8000/upload', {\n      method: 'POST',\n      body: formData,\n    });\n    const result = await response.json();\n    setHealthData(result.data);\n    setSuggestions(result.suggestions);\n  };\n\n  return (\n    <div style={{ margin: 40, fontFamily: 'Arial, sans-serif' }}>\n      <h2>Upload Your Health Data PDF</h2>\n      <input type=\"file\" accept=\"application/pdf\" onChange={handleFileChange} />\n      <button onClick={handleUpload} style={{ marginLeft: 10 }}>Submit</button>\n\n      {healthData && (\n        <div>\n          <h3>Extracted Data</h3>\n          <ul>\n            {Object.entries(healthData).map(([key, value]) => (\n              <li key={key}><strong>{key}:</strong> {value}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n\n      {suggestions && (\n        <div>\n          <h3>Medical Suggestions & Recommended Doctors</h3>\n          <ul>\n            {suggestions.map((sugg, i) => (\n              <li key={i}>{sugg}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}