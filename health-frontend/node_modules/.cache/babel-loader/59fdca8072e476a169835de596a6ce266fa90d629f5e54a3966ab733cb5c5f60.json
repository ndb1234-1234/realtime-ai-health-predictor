{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhana\\\\Desktop\\\\ece_project\\\\health-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [pdfFile, setPdfFile] = useState(null);\n  const [healthData, setHealthData] = useState(null);\n  const [suggestions, setSuggestions] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleFileChange = e => {\n    setPdfFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!pdfFile) return alert(\"Please select a PDF file.\");\n    setLoading(true);\n    const formData = new FormData();\n    formData.append('pdf', pdfFile);\n    const response = await fetch('http://localhost:8000/upload', {\n      method: 'POST',\n      body: formData\n    });\n    const result = await response.json();\n    setHealthData(result.data);\n    setSuggestions(result.suggestions);\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Health Insights Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"subtitle\",\n        children: \"Upload your medical PDF report to view and analyze your health data using AI.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"application/pdf\",\n          onChange: handleFileChange,\n          className: \"file-input\",\n          id: \"file-upload\",\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-upload\",\n          className: \"custom-file-label\",\n          children: pdfFile ? pdfFile.name : \"Choose PDF File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"upload-btn\",\n          onClick: handleUpload,\n          disabled: !pdfFile || loading,\n          children: loading ? \"Processing...\" : \"Upload & Analyze\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), healthData && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"Extracted Health Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-table\",\n          children: Object.entries(healthData).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"key\",\n              children: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"value\",\n              children: value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), suggestions && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"AI Medical Suggestions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"suggestions-list\",\n          children: suggestions.map((sugg, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"suggestion-item\",\n            children: sugg\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\",\n      children: [\"\\xA9 \", new Date().getFullYear(), \" Health Insights | Powered by React\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"t2JbQjvNAyth1G7rsJBn2yBATiQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","pdfFile","setPdfFile","healthData","setHealthData","suggestions","setSuggestions","loading","setLoading","handleFileChange","e","target","files","handleUpload","alert","formData","FormData","append","response","fetch","method","body","result","json","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","id","style","display","htmlFor","name","onClick","disabled","Object","entries","map","key","value","sugg","i","Date","getFullYear","_c","$RefreshReg$"],"sources":["C:/Users/dhana/Desktop/ece_project/health-frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [pdfFile, setPdfFile] = useState(null);\n  const [healthData, setHealthData] = useState(null);\n  const [suggestions, setSuggestions] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleFileChange = (e) => {\n    setPdfFile(e.target.files[0]);\n  };\n\n  const handleUpload = async () => {\n    if (!pdfFile) return alert(\"Please select a PDF file.\");\n    setLoading(true);\n    const formData = new FormData();\n    formData.append('pdf', pdfFile);\n\n    const response = await fetch('http://localhost:8000/upload', {\n      method: 'POST',\n      body: formData,\n    });\n    const result = await response.json();\n    setHealthData(result.data);\n    setSuggestions(result.suggestions);\n    setLoading(false);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"app-card\">\n        <h1 className=\"title\">Health Insights Dashboard</h1>\n        <p className=\"subtitle\">Upload your medical PDF report to view and analyze your health data using AI.</p>\n        <div className=\"upload-section\">\n          <input\n            type=\"file\"\n            accept=\"application/pdf\"\n            onChange={handleFileChange}\n            className=\"file-input\"\n            id=\"file-upload\"\n            style={{ display: 'none' }}\n          />\n          <label htmlFor=\"file-upload\" className=\"custom-file-label\">\n            {pdfFile ? pdfFile.name : \"Choose PDF File\"}\n          </label>\n          <button\n            className=\"upload-btn\"\n            onClick={handleUpload}\n            disabled={!pdfFile || loading}\n          >\n            {loading ? \"Processing...\" : \"Upload & Analyze\"}\n          </button>\n        </div>\n        {healthData && (\n          <div className=\"section\">\n            <h2 className=\"section-title\">Extracted Health Data</h2>\n            <div className=\"data-table\">\n              {Object.entries(healthData).map(([key, value]) => (\n                <div className=\"data-row\" key={key}>\n                  <span className=\"key\">{key}</span>\n                  <span className=\"value\">{value}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n        {suggestions && (\n          <div className=\"section\">\n            <h2 className=\"section-title\">AI Medical Suggestions</h2>\n            <ul className=\"suggestions-list\">\n              {suggestions.map((sugg, i) => (\n                <li className=\"suggestion-item\" key={i}>{sugg}</li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n      <footer className=\"footer\">\n        &copy; {new Date().getFullYear()} Health Insights | Powered by React\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}